@inject ApplicationDbContext DbContext

@using Hospital_Management.Data
@using Hospital_Management.Utilities
@model AppointmentModel?

@{
    var textBoxClasses = new Dictionary<string, object>()
    {
        { "class", "form-control" },
        { "readonly", "readonly" },
    };
}
@if (Model is {})
{
    <form method="post" class="container-fluid m-4" action="/patients/edit" enctype="multipart/form-data">
        <h4>Invoice Appointment</h4>
        <div class="container-fluid row">
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Patient.Id, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.Patient.Id)
                </div>
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Patient.Name, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.Patient.Name)
                </div>
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Patient.Address, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.Patient.Address)
                </div>
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Patient.CellphoneNumber, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.Patient.CellphoneNumber)
                </div>
            </div>
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.ExpiresAt, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.ExpiresAt)
                </div>
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Date, htmlAttributes: textBoxClasses)
                    @Html.LabelFor(x => x.Date)
                </div>
            </div>
        </div>
        <div class="container row">
            <table class="table">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Service</th>
                    <th scope="col">Amount</th>
                </tr>
                </thead>
                <tbody>
                @{
                    var services = Model.Services.Split(",").ToList();
                    foreach (var appointment in services)
                    {
                        var appointmentSplitted = appointment.Split(':');
                        var name = appointmentSplitted.FirstOrDefault();
                        var price = 1000d;
                        if (appointmentSplitted.Length > 1 && double.TryParse(appointmentSplitted.Last(), out var parsedPrice))
                            price = parsedPrice;
                        <tr>
                            <th scope="row">@(1 + services.IndexOf(appointment))</th>
                            <td>@appointment.FirstCharToUpper()</td>
                            <td>
                                <input type="hidden" name="newServices[][name]" value="@name"/>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">₱</span>
                                    </div>
                                    <input type="text" class="form-control prices" name="newServices[][price]" value="@price"/>
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <th scope="row"></th>
                        <td></td>
                        <td id="total-price">
                            
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <script>
            var totalPrice = 0;
            var prices = document.getElementsByClassName("prices");
            for (var i = 0; i < prices.length; i++) {
                prices[i].addEventListener("change", calculateTotal);
                totalPrice += parseFloat(prices[i].value);
            }
            document.getElementById("total-price").textContent = "Total Price: " + totalPrice;
            
            function calculateTotal() {
                totalPrice = 0;
                for (var i = 0; i < prices.length; i++) {
                    totalPrice += parseFloat(prices[i].value);
                }
                document.getElementById("total-price").textContent = "Total Price: " + totalPrice;
            }
        </script>
        <button class="btn btn-primary" type="submit">
            <i class="bi bi-printer-fill"></i> Print Invoice
        </button>
    </form>
}
else
{
    <div class="container">
        <p class="text-center text-danger">There are no current appointments, appointments have 30 minutes until they expire.</p>
    </div>
}